version: "3"

services:

    api:
        build:
            context: .
            dockerfile: docker/api/dev.dockerfile
        container_name: "api_node"
        depends_on:
            pgsql:
                condition: service_healthy
        environment:
            - NODE_ENV=development
        ports:
            - "5000:5000"
        networks:
            - tipsandtricks
        command: ["npm", "run", "init-db"]

    pgsql:
        image: postgres:latest
        environment:
            POSTGRES_PASSWORD: '${PGPASSWORD}'
            POSTGRES_USER: '${PGUSER}'
            POSTGRES_DB: '${PGDB}'
            PGDATA: /db/postgres
        ports:
            - "5432:5432"
        command: postgres -c 'max_connections=1000'
        networks:
            - tipsandtricks
        volumes:
            - ./data/postgresql:/var/lib/postgresql/db
        healthcheck:
            test: [ "CMD", "psql", "-U", "ttuser", "-d", "tipsandtricks", "-c", "SELECT 1;" ]
            interval: 5s
            timeout: 1m
            retries: 15

   # maildev:
    #    hostname: maildev
    #    image: maildev/maildev
    #    command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
    #    restart: always
    #    ports:
    #        - "1080:80"
    #        - "25:25"

networks:
    tipsandtricks:
        driver: bridge

